<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OutSystems.SOAP.API</name>
    </assembly>
    <members>
        <member name="T:OutSystems.SOAP.API.Configuration">
            <summary>
            Stores configuration parameters on how to connect to a SOAP API. Each Consume SOAP API has the corresponding associated configuration.
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.Configuration.Url">
            <summary>
            The URL of the SOAP web service.
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.Configuration.Username">
            <summary>
            The username to use on requests.
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.Configuration.Password">
            <summary>
            User's password for the service.
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.Configuration.TraceErrors">
            <summary>
            Controls whether errors should be traced or not.
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.Configuration.TraceAll">
            <summary>
            Controls whether a request should be traced, even if finishes normally.
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.Configuration.Trace">
            <summary>
            Controls whether a request should be traced.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Configuration.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructs a new Configuration object with the given parameters.
            </summary>
            <param name="url">URL to connect to.</param>
            <param name="username">Username to use.</param>
            <param name="password">The user's password.</param>
            <param name="traceErrors"><code>bool</code> indicating wether errors should be traced at runtime.</param>
            <param name="traceAll"><code>bool</code> indicating wether tracing should enable at runtime, even when errors do not occurr.</param>
        </member>
        <member name="M:OutSystems.SOAP.API.Configuration.GetCustomClientConfiguration(System.String,System.Int32,System.String)">
            <summary>
            Return a previously defined SOAP API Configuration, based on its Service Studio key and eSpace Id.
            </summary>
            <param name="soapClientSSKey">The Service Studio key of the SOAP API source.</param>
            <param name="eSpaceId">The eSpace Id.</param>
            <param name="eSpaceKey">The eSpace Key.</param>
            <returns>The corresponding Configuration.</returns>
        </member>
        <member name="T:OutSystems.SOAP.API.Internal.CheckLoggingInspectorBehavior">
            <summary>
            Internal class used as an aid during the logging process.
            This implementation can be changed without notice.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.CheckLoggingInspectorBehavior.#ctor">
            <summary>
            Default constructor, invoked internally
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.Internal.CheckLoggingInspectorBehavior.HasPassed">
            <summary>
            Flag to indicate whether runtime validations were performed or not
            </summary>
        </member>
        <member name="T:OutSystems.SOAP.API.Internal.AfterResponseLoggingContractBehavior">
            <summary>
            Logging endpoint behavior to save the request message and http headers sent
            This implementation can be changed without notice.
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.Internal.AfterResponseLoggingContractBehavior.ReplyMessage">
            <summary>
            The reply message of the SOAP web service call.
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.Internal.AfterResponseLoggingContractBehavior.ReplyHeaders">
            <summary>
            The reply headers of the SOAP web service call.
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.Internal.AfterResponseLoggingContractBehavior.StatusCode">
            <summary>
            The status code of the SOAP web service call.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.AfterResponseLoggingContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Implement to pass data at runtime to bindings to support custom behavior.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.AfterResponseLoggingContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>
            Implements a modification or extension of the client across an endpoint.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.AfterResponseLoggingContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
            <summary>
            Implements a modification or extension of the service across an endpoint.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.AfterResponseLoggingContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            Implement to confirm that the endpoint meets some intended criteria.
            In this situation, it's ensuring the order of the endpoint behaviors so that the AfterResponseLoggingBehavior runs always as the first behavior after receiving the response
            </summary>
        </member>
        <member name="T:OutSystems.SOAP.API.Internal.BeforeRequestLoggingEndpointBehavior">
            <summary>
            Logging endpoint behavior to save the response message, http headers received and the status code
            This implementation can be changed without notice.
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.Internal.BeforeRequestLoggingEndpointBehavior.RequestMessage">
            <summary>
            The request message of the SOAP web service call.
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.Internal.BeforeRequestLoggingEndpointBehavior.RequestHeaders">
            <summary>
            The request headers of the SOAP web service call.
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.Internal.BeforeRequestLoggingEndpointBehavior.StatusCode">
            <summary>
            The status code of the SOAP web service call.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.BeforeRequestLoggingEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Implement to pass data at runtime to bindings to support custom behavior.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.BeforeRequestLoggingEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>
            Implements a modification or extension of the client across an endpoint.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.BeforeRequestLoggingEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
            <summary>
            Implements a modification or extension of the service across an endpoint.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.BeforeRequestLoggingEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            Implement to confirm that the endpoint meets some intended criteria.
            In this situation, it's ensuring the order of the endpoint behaviors so that the BeforeRequestLoggingBehavior runs always as the last behavior before sending the request
            </summary>
        </member>
        <member name="T:OutSystems.SOAP.API.Internal.RequestContext">
            <summary>
            Internal class used to store the context of a Soap Request.
            Should never be used directly. Use the OutSystems.SOAP.API.SoapRequest class instead.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.RequestContext.#ctor(System.String,OutSystems.SOAP.API.ISOAPClient)">
            <summary>
            Constructor for RequestContext.
            This class is for internal use only. Use the OutSystems.SOAP.API.SoapRequest class instead.
            </summary>
            <param name="actionName"></param>
            <param name="client"></param>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.RequestContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:OutSystems.SOAP.API.Internal.TypeConversionHelper">
            <summary>
            Utility class containing methods to convert types.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.TypeConversionHelper.ConvertToByteArrayAndDispose(System.IO.Stream)">
            <summary>
            Save the contents of a Stream to a byte array and dispose of the Stream.
            This implementation can be changed without notice.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.TypeConversionHelper.ToDateTimeWithLocalTimezone(System.DateTime)">
            <summary>
            Compute the date time in the local time considering the "Unspecified" scenario.
            This implementation can be changed without notice.
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.TypeConversionHelper.ToTimeWithLocalTimezone(System.DateTime)">
            <summary>
            Returns the time in the local timezone.
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.TypeConversionHelper.ToTimeStringIgnoringDate(System.DateTime)">
            <summary>
            Compute the time string.
            This implementation can be changed without notice.
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.TypeConversionHelper.ConvertStringToTime(System.String)">
            <summary>
            Compute the datetime for time string
            This implementation can be changed without notice.
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.TypeConversionHelper.ConvertStringToDate(System.String)">
            <summary>
            Convert a string to date.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Internal.TypeConversionHelper.ToDateString(System.DateTime)">
            <summary>
            Compute the date string.
            This implementation can be changed without notice.
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:OutSystems.SOAP.API.ISOAPClient">
            <summary>
            Provides an abstraction over Windows Communication Foundation (WCF) client implementations, which can be used to call services.
            </summary>
        </member>
        <member name="P:OutSystems.SOAP.API.ISOAPClient.ClientCredentials">
            <summary>
            Gets the client credentials used to call an operation.
            </summary>
            <returns>Returns a System.ServiceModel.Description.ClientCredentials that represents the proof of identity presented by the client.</returns>
        </member>
        <member name="P:OutSystems.SOAP.API.ISOAPClient.Endpoint">
            <summary>
            Gets the target endpoint for the service to which the WCF client can connect.
            </summary>
            <returns>The target endpoint.</returns>
        </member>
        <member name="P:OutSystems.SOAP.API.ISOAPClient.InnerChannel">
            <summary>
            Gets the underlying System.ServiceModel.IClientChannel implementation.
            </summary>
            <returns>The client channel for the WCF client object.</returns>
        </member>
        <member name="P:OutSystems.SOAP.API.ISOAPClient.State">
            <summary>
            Gets the current state of the System.ServiceModel.ClientBase`1 object.
            </summary>
            <returns>The value of the System.ServiceModel.CommunicationState of the object.</returns>
        </member>
        <member name="M:OutSystems.SOAP.API.ISOAPClient.GetChannelFactory">
            <summary>
            Gets the inner channel used to send messages to variously configured service endpoints.
            </summary>
            <returns>A channel of a specified type.</returns>
        </member>
        <member name="T:OutSystems.SOAP.API.SoapRequest">
            <summary>
            Provides access to the SOAP request object used for consuming a SOAP method.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.SoapRequest.RegisterEndpointBehavior(System.ServiceModel.Description.IEndpointBehavior)">
            <summary>
            Register a method that can be used to extend run-time behavior for an endpoint.
            Check <see href="https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.description.iendpointbehavior?view=netframework-4.6.1">here</see> for more information.
            </summary>
            <param name="behavior">Behavior to be registered</param>
        </member>
        <member name="M:OutSystems.SOAP.API.SoapRequest.GetCurrentClient">
            <summary>
            Returns the request object used to issue a SOAP request.
            This method should only be used inside the OnRequest callback of a SOAP client.
            </summary>
            <returns>
            The SOAP request client, or null when used outside the OnRequest callback.
            </returns>
        </member>
        <member name="M:OutSystems.SOAP.API.SoapRequest.GetActionName">
            <summary>
            Returns the name of the SOAP Method that invoked the extension.
            </summary>
            <returns>Name of the SOAP Method that invoked the extension.</returns>
        </member>
        <member name="T:OutSystems.SOAP.API.Utils">
            <summary>
            Class with useful methods related to SOAP.
            </summary>
            <summary>
            Class with useful methods related to SOAP.
            </summary>
        </member>
        <member name="T:OutSystems.SOAP.API.Utils.Xml">
            <summary>
            Class with useful methods related to XML elements (any, anyAttribute, etc.). Internal.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Xml.SerializeXmlStringAsObjectArray(System.String[])">
            <summary>
            Internal method
            </summary>
            <param name="anyXml"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Xml.SerializeXmlStringAsObjectArray(System.String)">
            <summary>
            Internal method
            </summary>
            <param name="anyXml"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Xml.SerializeXmlStringAsObject(System.String,System.String)">
            <summary>
            Internal method
            </summary>
            <param name="objectXml"></param>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Xml.SerializeXmlStringAsAnyType(System.String[])">
            <summary>
            Internal method
            </summary>
            <param name="anyXml"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Xml.SerializeXmlStringAsAnyType(System.String)">
            <summary>
            Internal method
            </summary>
            <param name="anyXml"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Xml.SerializeXmlStringAsAnyTypeAttributes(System.String)">
            <summary>
            Internal method
            </summary>
            <param name="anyXml"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Xml.DeserializeObject(System.Xml.XmlNode)">
            <summary>
            Internal method
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Xml.DeserializeObject(System.Xml.XmlNode[])">
            <summary>
            Internal method
            </summary>
            <param name="nodes"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Xml.ToXml(System.String)">
            <summary>
            Internal method
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="T:OutSystems.SOAP.API.Utils.Enums">
            <summary>
            Class with useful methods related to enumerations.
            </summary>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Enums.ParseEnum(System.Type,System.String)">
            <summary>
            Method to get the original enumeration value
            </summary>
            <param name="enumType"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Enums.ParseEnum``1(System.String)">
            <summary>
            Method to get the original enumeration value
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Enums.ParseEnumList``1(OutSystems.HubEdition.RuntimePlatform.Db.BasicTypeList{System.String})">
            <summary>
            Method to get the original enumeration values
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Enums.GetEnumValue(System.Object)">
            <summary>
            Method to get a value from a enumeration
            </summary>
            <param name="enumField"></param>
            <returns></returns>
        </member>
        <member name="M:OutSystems.SOAP.API.Utils.Enums.GetEnumFlagNames(System.Enum)">
            <summary>
            Method to get the list of names from a flag enumeration
            </summary>
            <param name="enumValue"></param>
            <returns></returns>
        </member>
    </members>
</doc>
