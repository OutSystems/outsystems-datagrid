<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OutSystems.REST.API</name>
    </assembly>
    <members>
        <member name="T:OutSystems.REST.JsonConverters">
            <summary>
            Utility class containing converters used to map between JSON and native data types.
            </summary>
            <seealso cref="T:Newtonsoft.Json.JsonConverter"/>
        </member>
        <member name="T:OutSystems.REST.JsonConverters.DecimalConverter">
            <summary>
            This converter is necessary to ensure that decimals without any decimal places are not sent with a trailing .0
            
            See http://stackoverflow.com/questions/21153381/json-net-serializing-float-double-with-minimal-decimal-places-i-e-no-redundant for details.
            </summary>
        </member>
        <member name="M:OutSystems.REST.JsonConverters.DecimalConverter.CanConvert(System.Type)">
            <summary>
            Test whether the received type can be converted to and from JSON by this converter.
            </summary>
            <param name="objectType">the type to check.</param>
            <returns><code>true</code> if <code>objectType</code> is the (optionally nullable) decimal type, <code>false</code> otherwise.</returns>
        </member>
        <member name="M:OutSystems.REST.JsonConverters.DecimalConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The JsonReader from where to read.</param>
            <param name="objectType">Type of the object to be read.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The read object.</returns>
        </member>
        <member name="M:OutSystems.REST.JsonConverters.DecimalConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the representation of the received object to the serializer.
            </summary>
            <param name="writer">JsonWriter where to write to.</param>
            <param name="value">Object to serialize.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:OutSystems.REST.JsonConverters.UnixTimestampConverter">
            <summary>
            Converter capable of transforming <see cref="T:System.DateTime"/> to Unix timestamps and the other way around.
            </summary>
            This representation is also known as POSIX or Epoch time and is defined as the number of seconds that have elapsed since 00:00:00 UTC, 1 January 1970.
            <seealso ref="https://en.wikipedia.org/wiki/Unix_time"/>
            <seealso cref="T:Newtonsoft.Json.Converters.DateTimeConverterBase"/>
        </member>
        <member name="M:OutSystems.REST.JsonConverters.UnixTimestampConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of a DateTime.
            </summary>
            <param name="reader">The JsonReader from where to read.</param>
            <param name="objectType">Type of the object to be read.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The read DateTime object.</returns>
        </member>
        <member name="M:OutSystems.REST.JsonConverters.UnixTimestampConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the representation of the received date to the serializer.
            </summary>
            <param name="writer">JsonWriter where to write to.</param>
            <param name="value">DateTime to serialize.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:OutSystems.REST.JsonConverters.WCFDateConverter">
            <summary>
            A JSON converter which parses and writes <see cref="T:System.DateTime"/> in the WCF format.
            </summary>
            It is especially useful for applications using the Windows Communication Foundation.
            <seealso cref="T:Newtonsoft.Json.Converters.DateTimeConverterBase"/>
        </member>
        <member name="M:OutSystems.REST.JsonConverters.WCFDateConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of a DateTime.
            </summary>
            <param name="reader">The JsonReader from where to read.</param>
            <param name="objectType">Type of the object to be read.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The read DateTime object.</returns>
        </member>
        <member name="M:OutSystems.REST.JsonConverters.WCFDateConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the representation of the received date to the serializer.
            </summary>
            <param name="writer">JsonWriter where to write to.</param>
            <param name="value">DateTime to serialize.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:OutSystems.REST.Configuration">
            <summary>
            Stores configuration parameters on how to connect to a REST API. Each Consume REST API has the corresponding associated configuration.
            </summary>
        </member>
        <member name="P:OutSystems.REST.Configuration.Url">
            <summary>
            The URL of the REST web service.
            </summary>
        </member>
        <member name="P:OutSystems.REST.Configuration.Username">
            <summary>
            The username to use on requests.
            </summary>
        </member>
        <member name="P:OutSystems.REST.Configuration.Password">
            <summary>
            User's password for the service.
            </summary>
        </member>
        <member name="P:OutSystems.REST.Configuration.TraceErrors">
            <summary>
            Controls whether errors should be traced or not.
            </summary>
        </member>
        <member name="P:OutSystems.REST.Configuration.TraceAll">
            <summary>
            Controls whether a request should be traced, even if finishes normally.
            </summary>
        </member>
        <member name="P:OutSystems.REST.Configuration.Trace">
            <summary>
            Controls whether a request should be traced.
            </summary>
        </member>
        <member name="M:OutSystems.REST.Configuration.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructs a new Configuration object with the given parameters.
            </summary>
            <param name="url">URL to connect to.</param>
            <param name="username">Username to use.</param>
            <param name="password">The user's password.</param>
            <param name="traceErrors"><code>bool</code> indicating wether errors should be traced at runtime.</param>
            <param name="traceAll"><code>bool</code> indicating wether tracing should enable at runtime, even when errors do not occurr.</param>
        </member>
        <member name="M:OutSystems.REST.Configuration.GetClientConfiguration(System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Return a previously defined REST API Configuration, based on its Service Studio key and eSpace Id.
            </summary>
            <param name="clientSSKey">The Service Studio key of the REST API source.</param>
            <param name="eSpaceId">The eSpace Id.</param>
            <param name="eSpaceKey">The eSpace Key.</param>
            <param name="defaultUrlOverride"></param>
            <param name="defaultUserNameOverride"></param>
            <param name="defaultPasswordOverride"></param>
            <returns>The corresponding Configuration.</returns>
        </member>
        <member name="T:OutSystems.REST.HttpHelper">
            <summary>
            Helper class with methods related to HTTP and URL handling.
            </summary>
        </member>
        <member name="M:OutSystems.REST.HttpHelper.SetRequestHeader(System.Net.HttpWebRequest,System.String,System.String)">
            <summary>
            On the passed HTTP Request, set an header field to some value.
            </summary>
            <param name="request">Request to update.</param>
            <param name="headerName">Header field to set.</param>
            <param name="headerValue">Value for the header field.</param>
        </member>
        <member name="M:OutSystems.REST.HttpHelper.UrlEncode(System.String)">
            <summary>
            Encode the URL received, escaping illegal characters.
            </summary>
            <param name="urlToEncode">The URL.</param>
            <returns><code>urlToEncode</code>, appropriately encoded.</returns>
        </member>
        <member name="M:OutSystems.REST.HttpHelper.UrlQueryEncode(System.String)">
            <summary>
            Encode URL query parameters, escaping prohibited characters.
            </summary>
            <param name="urlToEncode">Text to encode.</param>
            <returns><code>urlToEncode</code>, appropriately encoded.</returns>
        </member>
        <member name="T:OutSystems.REST.WCFDateTimeHelper">
            <summary>
            Utility class containing methods to parse and write dates in the WCF format.
            </summary>
            It is especially useful for applications using the Windows Communication Foundation.
        </member>
        <member name="M:OutSystems.REST.WCFDateTimeHelper.TextToDateTime(System.String)">
            <summary>
            Parse the received input string as a WCF datetime and return an object representing it.
            </summary>
            <param name="text">Text to parse.</param>
            <returns>The read datetime.</returns>
        </member>
        <member name="M:OutSystems.REST.WCFDateTimeHelper.DateTimeToText(System.DateTime)">
            <summary>
            Return the textual representation of the input datetime.
            </summary>
            <param name="date"> Datetime to convert to string.</param>
            <returns>a string  of <code>date</code> in the WCF format.</returns>
        </member>
        <member name="T:OutSystems.RuntimePublic.REST.RestResponse">
            <summary>
            Provides access to the HTTP response object received when consuming a REST API method.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestResponse.GetCurrent">
            <summary>
            Returns the response object used by a REST API.
            This method should only be used inside the OnBeforeResponseAdvanced callback of a REST API.
            </summary>
            <returns>The REST API response, or null when used outside the OnBeforeResponseAdvanced callback.</returns>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestResponse.GetActionName">
            <summary>
            Returns the name of the REST API Method that invoked the extension.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestResponse.GetHttpWebResponse">
            <summary>
            Returns the native HttpWebResponse object that resulted from the web request.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestResponse.GetResponseBodyAsBinary">
            <summary>
            Returns the message body of the web response as binary content.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestResponse.GetResponseBodyAsText">
            <summary>
            Returns the message body of the web response as a string, respecting the encoding specified in the Content-Type header.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestResponse.SetResponseBody(System.Byte[])">
            <summary>
            Sets the message body of the web response.
            </summary>
            <param name="bytes">The body of the web request.</param>        
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestResponse.SetResponseBody(System.String)">
            <summary>
            Sets the message body of the web response.
            If the REST API Method has its 'Request Format' property set to 'Binary', no changes are made
            to the message body.
            </summary>
            <param name="text">The body of the web request.</param>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestResponse.GetResponseStatusCode">
            <summary>
            Returns the status code of the web response.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestResponse.SetResponseStatusCode(System.Int32)">
            <summary>
            Sets the status code of the web response with statusCode.
            </summary>
            <param name="statusCode">The status code of the web response.</param>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestResponse.GetResponseStatusLine">
            <summary>
            Returns the status line of the web response.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestResponse.SetResponseStatusLine(System.String)">
            <summary>
            Sets the status line of the web response with statusLine.
            </summary>
            <param name="statusLine">The status line of the web response.</param>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestResponse.GetResponseHeaders">
            <summary>
            Returns the headers of the web response. It's possible to add, change or remove headers.
            </summary>
        </member>
        <member name="T:OutSystems.RuntimePublic.REST.RestRequest">
            <summary>
            Provides access to the HTTP request object used for consuming a REST API method.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestRequest.GetCurrent">
            <summary>
            Returns the request object used by a REST API.
            This method should only be used inside the OnBeforeRequestAdvanced callback of a REST API.
            </summary>
            <returns>The REST API request, or null when used outside the OnBeforeRequestAdvanced callback.</returns>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestRequest.GetActionName">
            <summary>
            Returns the name of the REST API Method that invoked the extension.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestRequest.GetHttpWebRequest">
            <summary>
            Returns the native HttpWebRequest object used to perform the web request.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestRequest.GetRequestBodyAsBinary">
            <summary>
            Returns the message body of the web request as binary content.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestRequest.GetRequestBodyAsText">
            <summary>
            Returns the message body of the web request as a string.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestRequest.SetRequestBody(System.Byte[])">
            <summary>
            Sets the message body of the web request with binary content.
            </summary>
            <param name="bytes">The body of the web request.</param>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestRequest.SetRequestBody(System.String)">
            <summary>
            Sets the message body of the web request.
            If the REST API Method has its 'Request Format' property set to 'Binary', no changes are made
            to the message body.
            </summary>
            <param name="text">The body of the web request.</param>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestRequest.GetRequestURL">
            <summary>
            Returns the URL of the web request.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestRequest.SetRequestURL(System.String)">
            <summary>
            Sets the URL of the web request with url. If an HttpWebRequest has been previously obtained through the GetHttpWebRequest() method, it will become invalid and will have to be obtained again.
            </summary>
        </member>
        <member name="M:OutSystems.RuntimePublic.REST.RestRequest.GetRequestHeaders">
            <summary>
            Returns the headers of the web request. It's possible to add, change or remove headers.
            </summary>
        </member>
        <member name="T:OutSystems.Internal.REST.ResponseContext">
            <summary>
            Internal class used to store the context of a Rest Response.
            This class is for internal use only. Use the OutSystems.RuntimePublic.REST.RestResponse class instead.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.ResponseContext.#ctor(System.String,System.Net.HttpWebResponse)">
            <summary>
            Constructor for ResponseContext.
            This class is for internal use only. Use the OutSystems.RuntimePublic.REST.RestResponse class instead.
            </summary>
            <param name="actionName"></param>
            <param name="httpResponse"></param>
        </member>
        <member name="M:OutSystems.Internal.REST.ResponseContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.ResponseContext.GetActionName">
            <summary>
            Returns the name of the REST API Method that invoked the extension.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.ResponseContext.GetHttpWebResponse">
            <summary>
            Returns the native HttpWebResponse object that resulted from the web request.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.ResponseContext.GetText">
            <summary>
            Returns the message body of the web response as a string.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.ResponseContext.SetText(System.String)">
            <summary>
            Sets the message body of the web response.
            If the REST API Method has its 'Request Format' property set to 'Binary', no changes are made
            to the message body.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.ResponseContext.GetBinary">
            <summary>
            Returns the message body of the web response as binary content.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.ResponseContext.SetBinary(System.Byte[])">
            <summary>
            Sets the message body of the web response.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.ResponseContext.GetStatusCode">
            <summary>
            Returns the status code of the web response.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.ResponseContext.SetStatusCode(System.Int32)">
            <summary>
            Sets the status code of the web response.
            </summary>
            <param name="statusCode">The statuscode of the web request.</param>
        </member>
        <member name="M:OutSystems.Internal.REST.ResponseContext.GetStatusLine">
            <summary>
            Returns the status line of the web response.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.ResponseContext.SetStatusLine(System.String)">
            <summary>
            Sets the status line of the web response.
            </summary>
            <param name="statusLine">The status line of the web request.</param>
        </member>
        <member name="M:OutSystems.Internal.REST.ResponseContext.GetHeaders">
            <summary>
            Returns the headers of the web response.
            </summary>
        </member>
        <member name="T:OutSystems.Internal.REST.RequestContext">
            <summary>
            Internal class used to store the context of a Rest Request.
            Should never be used directly. Use the OutSystems.RuntimePublic.REST.RestRequest class instead.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.RequestContext.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            Constructor for RequestContext.
            This class is for internal use only. Use the OutSystems.RuntimePublic.REST.RestRequest class instead.
            </summary>
            <param name="actionName"></param>
            <param name="url"></param>
            <param name="requestMethod"></param>
            <param name="requestTimeout"></param>
        </member>
        <member name="M:OutSystems.Internal.REST.RequestContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.RequestContext.GetActionName">
            <summary>
            Returns the name of the REST API Method that invoked the extension.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.RequestContext.GetHttpWebRequest">
            <summary>
            Returns the HttpWebRequest object with the currently parameters.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.RequestContext.GetText">
            <summary>
            Returns the message body of the web request as a UTF-8 string.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.RequestContext.SetText(System.String)">
            <summary>
            Sets the message body of the web request.
            If the REST API Method has its 'Request Format' property set to 'Binary', no changes are made
            to the message body.
            </summary>
            <param name="text">The body of the web request.</param>
        </member>
        <member name="M:OutSystems.Internal.REST.RequestContext.GetBinary">
            <summary>
            Returns the message body of the web request as binary content.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.RequestContext.SetBinary(System.Byte[])">
            <summary>
            Sets the message body of the web request with binary content.
            </summary>
            <param name="bytes">The body of the web request.</param>
        </member>
        <member name="M:OutSystems.Internal.REST.RequestContext.GetRequestURL">
            <summary>
            Gets the request url of web request.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.RequestContext.SetRequestURL(System.String)">
            <summary>
            Sets the request url and rebuild the HttpWebRequest object with the new URL.
            </summary>
        </member>
        <member name="M:OutSystems.Internal.REST.RequestContext.GetHeaders">
            <summary>
            Returns the headers of the web request.
            </summary>
        </member>
    </members>
</doc>
